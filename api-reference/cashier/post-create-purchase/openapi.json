{
  "openapi": "3.0.0",
  "info": {
    "title": "Post createPurchase API",
    "description": "Create a new purchase for payment processing",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.paysecure.net",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/v1/purchases/": {
      "post": {
        "summary": "Create a purchase session",
        "description": "Initiates the payment process by generating a unique session for a transaction. Depending on the passed paymentMethod and pre-configured routing rules, the API directs the transaction through the appropriate payment channel.",
        "operationId": "createPurchase",
        "tags": ["Purchase"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRequest"
              },
              "examples": {
                "purchase": {
                  "value": {
                    "client": {
                      "full_name": "test user",
                      "email": "testuser@email.com",
                      "country": "GB",
                      "city": "testcity",
                      "stateCode": "ca",
                      "street_address": "test street",
                      "zip_code": "234567",
                      "phone": "9999999999",
                      "tax_number": "34946395822"
                    },
                    "purchase": {
                      "currency": "GBP",
                      "expireInMin": "40",
                      "products": [
                        {
                          "name": "testproduct",
                          "price": "10"
                        }
                      ]
                    },
                    "paymentMethod": "",
                    "brand_id": "c4003b2c-22d4-4dc1-ad0c-c6b54f8c9636",
                    "merchantRef": "",
                    "send_receipt": "",
                    "skip_capture": "",
                    "success_redirect": "https://your.success.redirect.com",
                    "failure_redirect": "https://your.failure.redirect.com",
                    "success_callback": "https://your.success.callback.com",
                    "failure_callback": "https://your.failure.callback.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Purchase created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "purchaseId": "675c3e1acc720c3a49bb2985",
                      "client": {
                        "customerId": "NA",
                        "email": "testuser@email.com",
                        "phone": "9999999999",
                        "full_name": "test user",
                        "street_address": "test street",
                        "country": "GB",
                        "city": "testcity",
                        "zip_code": "234567",
                        "cc": [],
                        "bcc": [],
                        "tax_number": "34946395822",
                        "stateCode": "ca"
                      },
                      "updated_on": 1734098458,
                      "type": "purchase",
                      "paymentMethod": "SPEI-CLABE,SPEI-CARD,SPEI-MOBILE,eNaira,BANKTRANSFER,KoraPayMobileMoney,PIX,MASTER,VISA,THIRDPARTY-NETBANKING,INTERAC,INTERAC-E-TRANSFER,QBPAYFTOPUP,MOBILEWALLET,UZCARD,HUMO,AMEX,KLARNA,JCB,FawryPay,DISCOVER,QBPAY",
                      "amountUnit": "MAJOR",
                      "errorMsg": "",
                      "redirectType": "POST",
                      "force_recurring": false,
                      "created_on": 1734098458,
                      "merchantRef": "675c3e1acc720c3a49bb2985",
                      "merchantName": "merchant002",
                      "purchase": {
                        "currency": "GBP",
                        "products": [
                          {
                            "name": "testproduct",
                            "quantity": 1,
                            "price": 10,
                            "discount": 0,
                            "tax_percent": "0.00"
                          }
                        ],
                        "total": 10,
                        "language": "en",
                        "notes": "",
                        "debt": 0,
                        "total_formatted": 1,
                        "expireInMin": "40",
                        "request_client_details": [],
                        "timezone": "MIT",
                        "email_message": ""
                      },
                      "issuer_details": {
                        "website": "",
                        "legal_street_address": "",
                        "legal_country": "",
                        "legal_city": "",
                        "legal_zip_code": "",
                        "bank_accounts": [
                          {}
                        ],
                        "legal_name": "test6",
                        "brand_name": "test6",
                        "registration_number": "",
                        "tax_number": ""
                      },
                      "transaction_data": {
                        "payment_method": "",
                        "flow": "payform",
                        "extra": {},
                        "country": "",
                        "attempts": []
                      },
                      "status": "CREATED",
                      "status_history": [
                        {
                          "status": "created",
                          "timestamp": 1734098458
                        }
                      ],
                      "is_test": false,
                      "brand_id": "c4003b2c-22d4-4dc1-ad0c-c6b54f8c9636",
                      "is_recurring_token": false,
                      "reference_generated": "PS12972",
                      "issued": "2024-12-13",
                      "due": 1734098458,
                      "refund_upto": 0,
                      "cc_descriptor": "",
                      "fraudScore": "NA",
                      "trustScore": "NA",
                      "paidOn": 0,
                      "refund_availability": "NONE",
                      "refundable_amount": 0,
                      "success_redirect": "https://your.success.redirect.com",
                      "failure_redirect": "https://your.failure.redirect.com",
                      "cancel_redirect": "",
                      "success_callback": "https://your.success.callback.com",
                      "failure_callback": "https://your.failure.callback.com",
                      "platform": "API",
                      "created_from_ip": "49.36.232.165",
                      "checkout_url": "https://staging.paysecure.net/payments/675c3e1acc720c3a49bb2985/",
                      "direct_post_url": "https://staging.paysecure.net/api/v1/p/675c3e1acc720c3a49bb2985/",
                      "payoutProcess": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "error",
                      "message": "Invalid input parameters",
                      "code": "INVALID_INPUT"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "error",
                      "message": "Authentication failed",
                      "code": "AUTH_FAILED"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "error",
                      "message": "Internal server error",
                      "code": "SERVER_ERROR"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClientInfo": {
        "type": "object",
        "required": [
          "full_name",
          "email",
          "country",
          "city",
          "street_address",
          "zip_code",
          "phone"
        ],
        "properties": {
          "full_name": {
            "type": "string",
            "description": "Customer's full name",
            "example": "test user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Customer's email address",
            "example": "testuser@email.com"
          },
          "country": {
            "type": "string",
            "description": "Country code (ISO 3166-1 alpha-2)",
            "example": "GB"
          },
          "city": {
            "type": "string",
            "description": "Customer's city",
            "example": "testcity"
          },
          "stateCode": {
            "type": "string",
            "description": "State code",
            "example": "ca"
          },
          "street_address": {
            "type": "string",
            "description": "Street address",
            "example": "test street"
          },
          "zip_code": {
            "type": "string",
            "description": "Postal/ZIP code",
            "example": "234567"
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number",
            "example": "9999999999"
          },
          "tax_number": {
            "type": "string",
            "description": "Tax identification number",
            "example": "34946395822"
          }
        }
      },
      "Product": {
        "type": "object",
        "required": [
          "name",
          "price"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Product name",
            "example": "testproduct"
          },
          "price": {
            "oneOf": [
              { "type": "string" },
              { "type": "number" }
            ],
            "description": "Product price",
            "example": "10"
          },
          "quantity": {
            "type": "number",
            "description": "Product quantity",
            "example": 1
          },
          "discount": {
            "type": "number",
            "description": "Product discount",
            "example": 0
          },
          "tax_percent": {
            "type": "string",
            "description": "Tax percentage",
            "example": "0.00"
          }
        }
      },
      "PurchaseInfo": {
        "type": "object",
        "required": [
          "currency",
          "products"
        ],
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency code for the transaction",
            "example": "GBP"
          },
          "expireInMin": {
            "type": "string",
            "description": "Session expiration time in minutes",
            "example": "40"
          },
          "products": {
            "type": "array",
            "description": "List of products with name and price details",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "language": {
            "type": "string",
            "description": "Language code",
            "example": "en"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes",
            "example": ""
          },
          "total": {
            "type": "number",
            "description": "Total amount",
            "example": 10
          },
          "total_formatted": {
            "type": "number",
            "description": "Formatted total amount",
            "example": 1
          }
        }
      },
      "PurchaseRequest": {
        "type": "object",
        "required": [
          "client",
          "purchase",
          "brand_id"
        ],
        "properties": {
          "client": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "purchase": {
            "$ref": "#/components/schemas/PurchaseInfo"
          },
          "paymentMethod": {
            "type": "string",
            "description": "Payment method to be used (e.g., PIX, UPI)",
            "example": ""
          },
          "brand_id": {
            "type": "string",
            "description": "Merchant's unique identifier",
            "example": "c4003b2c-22d4-4dc1-ad0c-c6b54f8c9636"
          },
          "merchantRef": {
            "type": "string",
            "description": "Custom merchant reference for tracking",
            "example": ""
          },
          "send_receipt": {
            "type": "string",
            "description": "Flag to send customer receipt (true or false)",
            "example": ""
          },
          "skip_capture": {
            "type": "string",
            "description": "Skip payment capture (true or false)",
            "example": ""
          },
          "success_redirect": {
            "type": "string",
            "description": "URL to redirect customers on successful payment",
            "example": "https://your.success.redirect.com"
          },
          "failure_redirect": {
            "type": "string",
            "description": "URL to redirect customers on payment failure",
            "example": "https://your.failure.redirect.com"
          },
          "success_callback": {
            "type": "string",
            "description": "Callback URL for server-to-server success events",
            "example": "https://your.success.callback.com"
          },
          "failure_callback": {
            "type": "string",
            "description": "Callback URL for server-to-server failure events",
            "example": "https://your.failure.callback.com"
          }
        }
      },
      "StatusHistory": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status value",
            "example": "created"
          },
          "timestamp": {
            "type": "integer",
            "description": "Unix timestamp",
            "example": 1734098458
          }
        }
      },
      "PurchaseResponse": {
        "type": "object",
        "properties": {
          "purchaseId": {
            "type": "string",
            "description": "Unique identifier for the purchase",
            "example": "675c3e1acc720c3a49bb2985"
          },
          "client": {
            "type": "object",
            "description": "Customer information",
            "properties": {
              "customerId": {
                "type": "string",
                "description": "Customer ID",
                "example": "NA"
              },
              "email": {
                "type": "string",
                "description": "Customer email",
                "example": "testuser@email.com"
              },
              "phone": {
                "type": "string",
                "description": "Customer phone",
                "example": "9999999999"
              },
              "full_name": {
                "type": "string",
                "description": "Customer full name",
                "example": "test user"
              },
              "street_address": {
                "type": "string",
                "description": "Street address",
                "example": "test street"
              },
              "country": {
                "type": "string",
                "description": "Country code",
                "example": "GB"
              },
              "city": {
                "type": "string",
                "description": "City",
                "example": "testcity"
              },
              "zip_code": {
                "type": "string",
                "description": "ZIP code",
                "example": "234567"
              },
              "tax_number": {
                "type": "string",
                "description": "Tax number",
                "example": "34946395822"
              },
              "stateCode": {
                "type": "string",
                "description": "State code",
                "example": "ca"
              }
            }
          },
          "updated_on": {
            "type": "integer",
            "description": "Last update timestamp",
            "example": 1734098458
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "example": "purchase"
          },
          "paymentMethod": {
            "type": "string",
            "description": "Available payment methods",
            "example": "SPEI-CLABE,SPEI-CARD,SPEI-MOBILE,eNaira,BANKTRANSFER,KoraPayMobileMoney,PIX,MASTER,VISA,THIRDPARTY-NETBANKING,INTERAC,INTERAC-E-TRANSFER,QBPAYFTOPUP,MOBILEWALLET,UZCARD,HUMO,AMEX,KLARNA,JCB,FawryPay,DISCOVER,QBPAY"
          },
          "amountUnit": {
            "type": "string",
            "description": "Amount unit",
            "example": "MAJOR"
          },
          "status": {
            "type": "string",
            "description": "Current status of the purchase",
            "example": "CREATED"
          },
          "status_history": {
            "type": "array",
            "description": "History of status changes",
            "items": {
              "$ref": "#/components/schemas/StatusHistory"
            }
          },
          "created_on": {
            "type": "integer",
            "description": "Creation timestamp",
            "example": 1734098458
          },
          "merchantRef": {
            "type": "string",
            "description": "Merchant reference",
            "example": "675c3e1acc720c3a49bb2985"
          },
          "purchase": {
            "$ref": "#/components/schemas/PurchaseInfo"
          },
          "checkout_url": {
            "type": "string",
            "description": "URL for checkout page",
            "example": "https://staging.paysecure.net/payments/675c3e1acc720c3a49bb2985/"
          },
          "direct_post_url": {
            "type": "string",
            "description": "URL for direct post",
            "example": "https://staging.paysecure.net/api/v1/p/675c3e1acc720c3a49bb2985/"
          },
          "success_redirect": {
            "type": "string",
            "description": "Success redirect URL",
            "example": "https://your.success.redirect.com"
          },
          "failure_redirect": {
            "type": "string",
            "description": "Failure redirect URL",
            "example": "https://your.failure.redirect.com"
          },
          "success_callback": {
            "type": "string",
            "description": "Success callback URL",
            "example": "https://your.success.callback.com"
          },
          "failure_callback": {
            "type": "string",
            "description": "Failure callback URL",
            "example": "https://your.failure.callback.com"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Error status",
            "example": "error"
          },
          "message": {
            "type": "string",
            "description": "Descriptive error message",
            "example": "Invalid input parameters"
          },
          "code": {
            "type": "string",
            "description": "Error code",
            "example": "INVALID_INPUT"
          }
        }
      }
    },
    "parameters": {
      "BrandIdHeader": {
        "name": "BrandId",
        "in": "header",
        "description": "Brand ID for the merchant",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "brand_id_value"
      }
    }
  }
} 